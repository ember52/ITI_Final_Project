pipeline {
    agent {
        kubernetes {
            label 'ubuntu-agent'
            defaultContainer 'ubuntu'
            yamlFile 'k8s_agent_pod_templates/ubuntu-deploy-agent.yaml'
        }
    }

    stages {
        stage('Install required packages') {
            steps {
                container('ubuntu') {
                    // Install kubectl and requirements in the container
                    sh 'apt-get update -y'
                    sh 'apt-get install git -y'
                    sh 'apt-get install curl -y'
                    sh 'curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl'
                    sh 'chmod +x ./kubectl'
                    sh 'mv ./kubectl /usr/local/bin/kubectl'
                }
            }
        }

        stage('Clone app Repository') {
            steps {
                container('ubuntu') {
                    script {
                        sh 'git clone -b main https://github.com/ember52/ITI_Final_Project'
                        sh 'ls -la'
                    }
                }
            }
        }

        stage('Deploy application from image on Minikube') {
            steps {
                container('ubuntu') {
                    // Change directory to the cloned repository
                    script {
                        dir('ITI_Final_Project') {
                            // Deploy the app to Cluster
                            sh """
                            kubectl apply -f app-deployment
                            """
                        }
                    }
                }
            }
        }      
    }
}
